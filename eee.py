# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import tensorflow as tf
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication,QWidget,QMessageBox,QFileDialog,QFrame
from PyQt5.QtGui import QIcon
import sys,os
sys.path.append(os.path.dirname(__file__) + os.sep + '../')
list1=[
    "cat","cow","dog","sheep","horse"
]
def image_deals(train_file):       # 读取原始文件
    image_string = tf.io.read_file(train_file)  # 读取原始文件
    image_decoded = tf.image.decode_png(image_string)  # 解码JPEG图片
    image_decoded= tf.image.resize(image_decoded, [299, 299])  #把图片转换为224*224的大小
    #image = tf.image.rgb_to_grayscale(image_decoded)
    image = tf.cast(image_decoded, dtype=tf.float32) / 255.0-0.5
    image=tf.expand_dims(image,axis=0)
    print(image)
    return image
class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(626, 564)
        Form.setMinimumSize(QtCore.QSize(626, 564))
        Form.setMaximumSize(QtCore.QSize(626, 564))
        self.widget = QtWidgets.QPushButton(Form)
        self.widget.setGeometry(QtCore.QRect(5, 55, 371, 501))
        self.widget.setMinimumSize(QtCore.QSize(371, 501))
        self.widget.setMaximumSize(QtCore.QSize(371, 501))
        self.widget.setStyleSheet("QWidget{border-image: url(pic/class2.png)}")
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(0, 0, 626, 50))
        self.label.setMinimumSize(QtCore.QSize(626, 50))
        self.label.setMaximumSize(QtCore.QSize(626, 50))
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        font = QtGui.QFont()
        font.setFamily("Arial")  # 括号里可以设置成自己想要的其它字体
        font.setPointSize(18)  # 括号里的数字可以设置成自己想要的字体大
        self.label.setFont(font)
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(370, 70, 251, 41))
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        font1 = QtGui.QFont()
        font1.setFamily("Arial")  # 括号里可以设置成自己想要的其它字体
        font1.setPointSize(12)  # 括号里的数字可以设置成自己想要的字体大
        self.label_2.setFont(font1)
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(430, 140, 131, 31))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        self.pushButton_3.setGeometry(QtCore.QRect(430, 420, 131, 31))
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(370, 290, 251, 41))
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_3.setFont(font1)
        self.filename=""
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowIcon(QIcon("pic/class3.png"))
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "动物分类平台"))
        self.label_2.setText(_translate("Form", "未上传"))
        self.pushButton.setText(_translate("Form", "上传照片"))
        self.pushButton_3.setText(_translate("Form", "识别"))
        self.label_3.setText(_translate("Form", "没有发现图片"))
class mywindow(QWidget, Ui_Form):  # 这个地方要注意Ui_MainWindow
    def __init__(self):
        super(mywindow, self).__init__()
        self.setupUi(self)
        self.widget.clicked.connect(self.handclick)
        self.pushButton.clicked.connect(self.handclick)
        self.pushButton_3.clicked.connect(self.fun1)
    def handclick(self):
        fileName_choose, filetype=QFileDialog.getOpenFileName(filter="png Files (*.png);;jpg Files (*.jpg)")
        if fileName_choose == "":
            return
        print(fileName_choose,filetype)
        self.label_2.setText("上传成功")
        self.widget.setStyleSheet("QWidget{border-image: url("+str(fileName_choose)+")}")
        self.filename=fileName_choose
    def fun1(self):
        if self.filename=="":
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', '图片未找到！')
            return
        try:
            target=image_deals(self.filename)
            model = tf.saved_model.load("model-savedmodel")
            tar=model(target)
            tar=tf.argmax(tar,axis=1)
            print(tar)
            cc=tar.numpy().tolist()
            print(cc)
            d=cc[0]
            self.label_3.setText(list1[d])
        except Exception as e:
            print(e)

if __name__ == '__main__':
    app = QApplication(sys.argv)
    w = mywindow()
    w.show()
    sys.exit(app.exec_())